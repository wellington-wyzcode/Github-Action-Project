

name: CICD Pipeline

on:
  push:
    branches: [ "main" ]
 
jobs:
  compile:
    runs-on: first-host
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: compile with Maven
      working-directory: ./Action_project
      run: mvn compile

  security-check:
    runs-on: first-host
    needs: compile
    steps:
    - uses: actions/checkout@v4
    - name: Trivy Installation
      run: |       
        sudo apt-get install -y wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy
    - name: Trivy Fs Scan
      run: trivy fs --format table -o fs-report.json .
    - name: gitleaks installation
      run: sudo apt install gitleaks -y
    - name: gitleaks code scan
      run: gitleaks detect source . -r gitleaks-report.json -f json

  test:
    runs-on: first-host
    needs: security-check
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: unit test with Maven
      working-directory: ./Action_project
      run: mvn test

  build_project_and_sonarqube:
    runs-on: first-host
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: build_project
      #working-directory: ./Action_project
      run: mvn -f Action_project/pom.xml package

    - uses: actions/checkout@v4
      with:
        # Disabling shallow clonesworking-directory: ./Action_project is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: SonarQube Scan
      
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      run: |
        sonar-scanner \
          -Dsonar.projectKey=github-action-project \
          -Dsonar.projectName="Github Action Project" \
          -Dsonar.projectVersion=1.0.0 \
          -Dsonar.sources=src/main/java \
          -Dsonar.tests=src/test/java \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      working-directory: ./Action_project/src

   # Check the Quality Gate status.
    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      uses: sonarsource/sonarqube-quality-gate-action@master
      with:
        pollingTimeoutSec: 600
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }} #OPTIONAL

  

